% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/PcountM.R
\name{nll.PcountMcov}
\alias{nll.PcountMcov}
\title{Evaluates the negeative log-likelihood for model PCount:M with lambda depending 
on a covariate.}
\usage{
nll.PcountMcov(param, R, J, Tmax, dat, covar)
}
\arguments{
\item{param}{A vector comprised of parameters \eqn{b_0}{b0}, \eqn{b_1}{b1}, 
and the log of the detection hazard (in that order), where the log of the Poisson rate 
lambda is equal to \eqn{b_0+b_1x}{b0+b1*x} and \eqn{x}{x} is the covariate \code{covar}.}

\item{R}{The number of sites.}

\item{J}{The number of occasions}

\item{Tmax}{The survey duration (assumed to be the same for all sites)}

\item{dat}{An \code{R} by 1 matrix of counts}

\item{covar}{A vector covariate of length \code{R} on which the expected number of 
animals in the site depends linearly (assumed to be the same for all occasions).}
}
\value{
Returns the negative log-likelihood function for model PCount:M evaluated at 
the parameter values passed in \code{param}.
}
\description{
Evaluates the negeative log-likelihood for model PCount:M, assuming that lambda 
depends on a covariate \code{covar} that is site-dependent, 
given initial parameter estimates and Poisson count data from a \code{J}-occasion survey.
}
\examples{
# seed
set.seed(321)
# setting
Rsites=100. #number of sites
Joccs=5 # number of occasions
Tsearch=3 #maximum time
#true parameters
b0t =0.660878  
b1t =0.255413
gt=0.4620981
# simulation of the covariate x over R sites for true parameters
x=rnorm(R,0,1)
hist(x)
lambda=exp(b0t+b1t*x)
mean(lambda)
# true parameters
paramt=c(b0t,b1t,gt)

# generate
ymat=generate.PcountMcov(paramt, R=Rsites, J=Joccs, Tmax=Tsearch, covar=x)
str(ymat)
head(ymat)

# starting values 
param0=cbind(b0t,b1t,log(gt))
# evaluate likelihood at starting value
nll.PcountMcov(param0, R=Rsites, J=Joccs, Tmax=Tsearch, dat=ymat, covar=x)

# optimize
fit.PcountMcov=optim(param0, nll.PcountMcov, R=Rsites, J=Joccs, Tmax=Tsearch, 
                     dat=ymat,covar=x,,method="BFGS")
estpar.PcountMcov=fit.PcountMcov$par
# compare estimates and true parameters
c(estpar.PcountMcov[1:2],exp(estpar.PcountMcov[3]))
paramt 

}
