% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/countST1.R
\name{nll.countST1cov}
\alias{nll.countST1cov}
\title{Evaluates the negeative log-likelihood for model CountT1:S with lambda depending 
on a covariate.}
\usage{
nll.countST1cov(param, R, Tmax, dat, covar)
}
\arguments{
\item{param}{A vector comprised of parameters \eqn{b_0}{b0}, \eqn{b_1}{b1}, 
and the log of the detection hazard (in that order), where the log of the Poisson rate 
lambda is equal to \eqn{b_0+b_1x}{b0+b1*x} and \eqn{x}{x} is the coaviate \code{covar}.}

\item{R}{The number of sites.}

\item{Tmax}{The survey duration (assumed to be the same for all sites)}

\item{dat}{An \code{R} by 2 matrix with first column being the number of detections 
in the site and second column being the time to first detection of an animal 
in the site (with zero representing no detections).}

\item{covar}{A vector covariate of length \code{R} on which the expected number of 
animals in the site depends linearly (assumed to be the same for all occasions).}
}
\value{
Returns the negative log-likelihood function for model CountT1:S evaluated at 
the parameter values passed in \code{param}.
}
\description{
Evaluates the negeative log-likelihood for model CountT1:S, assuming that lambda 
depends on a covariate \code{covar} that is site-dependent, 
given initial parameter estimates and binary data from a multiple-occasion survey.
}
\examples{
Rsites=100. #number of sites
Tsearch=3 #maximum time

#true parameters
b0t =0.660878  #true intercept for log(lambda) 
b1t =0.255413 #true slope for log(lambda)
ht=0.4620981  #rate parameter

# simulation of the covariate x over R sites 
# hence the site-dependent abundance for the true parameters b0t and b1t
set.seed(123) # for reprodicibility
x=rnorm(R,0,1)
lambda=exp(b0t+b1t*x)
mean(lambda)

# true probabilites
1-exp(-ht*Tmax)      #P(individual detected)
1-exp(-mean(lambda)) #P(site occupancy)
paramt=c(b0t,b1t,ht)

# data for CountT1:S
cntm=as.matrix(generate.countST1cov(paramt,R=Rsites,Tmax=Tsearch,covar=x))

init.paramt=c(b0t, b1t, log(ht))
nll = nll.countST1cov(param=init.paramt, R=Rsites, Tmax=Tsearch,dat=cntm, covar=x)
nll

# optimize
fit.countST1cov=optim(init.paramt,nll.countST1cov,R=Rsites,Tmax=Tsearch,dat=cntm,covar=x)
estpar.countST1cov=fit.countST1cov$par
# compare estimates and true parameters
c(estpar.countST1cov[1:2],exp(estpar.countST1cov[3]))
paramt 

}
