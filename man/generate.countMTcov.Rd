% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/countMT.R
\name{generate.countMTcov}
\alias{generate.countMTcov}
\title{Generates binary data for model CountT:M with lambda depending 
on a covariate.}
\usage{
generate.countMTcov(param, R, J, Tmax, covar)
}
\arguments{
\item{param}{A vector comprised of parameters \eqn{b_0}{b0}, \eqn{b_1}{b1}, 
and the log of the detection hazard (in that order), where the log of the Poisson rate 
lambda is equal to \eqn{b_0+b_1x}{b0+b1*x} and \eqn{x}{x} is the coaviate \code{covar}.}

\item{R}{The number of sites.}

\item{J}{The number of occasions (assumed the same for all sites).}

\item{Tmax}{The survey duration (assumed to be the same for all sites)}

\item{covar}{A vector covariate of length \code{R} on which the expected number of 
animals in the site depends linearly (assumed to be the same for all occasions).}
}
\value{
Returns an \code{R} by \code{2J} matrix with first \code{J} columns being the numbers 
of detections in each site on each occasion and the remaining \code{J} columns being the 
**sum** of times to detection for all detected  animals within the site on the occasion 
(with zero representing no detections).
}
\description{
Generates Poisson random variables for each of the \code{R} sites, corresponding to the 
number of animals in each site and depending on the covariate value attached to the site. 
Then generates Poissin random variables for each animal on each of \code{J} occasions that 
each site is surveyed, assuming a constant hazard of detection for each animal.
}
\examples{
Rsites=100. #number of sites
Jsites=5    #number of visits
Tsearch=3 #maximum time

#true parameters
b0t =0.660878  #true intercept for log(lambda) 
b1t =0.255413 #true slope for log(lambda)
ht=0.4620981  #rate parameter

# simulation of the covariate x over R sites 
# hence the site-dependent abundance for the true parameters b0t and b1t
set.seed(123) # for reprodicibility
x=rnorm(Rsites,0,1)
lambda=exp(b0t+b1t*x)
mean(lambda)

# true probabilites
1-exp(-ht*Tsearch)      #P(individual detected)
1-exp(-mean(lambda)) #P(site occupancy)
paramt=c(b0t, b1t,ht)

# data for CountT:M
cntm=as.matrix(generate.countMTcov(paramt,R=Rsites,J=Jsites,Tmax=Tsearch,covar=x))
str(cntm)
head(cntm)

}
