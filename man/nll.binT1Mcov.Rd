% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/binT1M.R
\name{nll.binT1Mcov}
\alias{nll.binT1Mcov}
\title{Evaluates the negeative log-likelihood for model BinaryT1:M with lambda depending 
on a covariate.}
\usage{
nll.binT1Mcov(param, R, J, Tmax, dat, covar)
}
\arguments{
\item{param}{A vector comprised of parameters \eqn{b_0}{b0}, \eqn{b_1}{b1}, 
and the log of the detection hazard (in that order), where the log of the Poisson rate 
lambda is equal to \eqn{b_0+b_1x}{b0+b1*x} and \eqn{x}{x} is the covariate \code{covar}.}

\item{R}{The number of sites.}

\item{J}{The number of occasions (assumed the same for all sites).}

\item{Tmax}{The survey duration (assumed to be the same for all sites)}

\item{dat}{An \code{R} by \code{J} matrix of binary values, with a 1 representing
detection and a 0 representing no detection}

\item{covar}{A vector covariate of length \code{R} on which the expected number of 
animals in the site depends linearly (assumed to be the same for all occasions).}
}
\value{
Returns the negative log-likelihood function for model BinaryT1:M evaluated at 
the parameter values passed in \code{param}.
}
\description{
Evaluates the negeative log-likelihood for model BinaryT1:M, assuming that lambda 
depends on a covariate \code{covar} that is site-dependent, 
given initial parameter estimates and binary data from a multiple-occasion survey.
}
\examples{
Rsites=100. #number of sites
Jsites=5    #number of visits
Tsearch=3 #maximum time

#true parameters
b0t =0.660878  #true intercept for log(lambda) 
b1t =0.255413 #true slope for log(lambda)
ht=0.4620981  #rate parameter

# simulation of the covariate x over R sites 
# hence the site-dependent abundance for the true parameters b0t and b1t
set.seed(123) # for reprodicibility
x=rnorm(Rsites,0,1)
lambda=exp(b0t+b1t*x)
mean(lambda)

# true probabilites
1-exp(-ht*Tsearch)      #P(individual detected)
1-exp(-mean(lambda)) #P(site occupancy)
paramt=c(b0t,b1t,ht)

# data for BinaryT1:M
t1m=as.matrix(generate.binT1Mcov(paramt,R=Rsites,J=Jsites,Tmax=Tsearch,covar=x))

init.paramt=c(b0t, b1t, log(ht))
nll = nll.binT1Mcov(param=init.paramt, R=Rsites, J=Jsites, Tmax=Tsearch,dat=t1m, covar=x)
nll

# optimize
fit.binT1Mcov=optim(init.paramt,nll.binT1Mcov,R=Rsites,J=Jsites,Tmax=Tsearch,dat=t1m,covar=x)
estpar.binT1Mcov=fit.binT1Mcov$par
# compare estimates and true parameters
c(estpar.binT1Mcov[1:2],exp(estpar.binT1Mcov[3]))
paramt 

}
